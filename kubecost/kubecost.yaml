---
# Source: cost-analyzer/templates/cost-analyzer-service-account-template.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: kubecost-cost-analyzer
  namespace: kubecost
  labels:
    
    app.kubernetes.io/name: cost-analyzer
    helm.sh/chart: cost-analyzer-2.4.0
    app.kubernetes.io/instance: kubecost
    app.kubernetes.io/managed-by: Helm
    app: cost-analyzer
---
# Source: cost-analyzer/templates/prometheus-server-serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    component: "server"
    app: prometheus
    release: kubecost
    heritage: Helm
  name: kubecost-prometheus-server
  namespace: kubecost
---
# Source: cost-analyzer/templates/cost-analyzer-config-map-template.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: kubecost-cost-analyzer
  namespace: kubecost
  labels:
    
    app.kubernetes.io/name: cost-analyzer
    helm.sh/chart: cost-analyzer-2.4.0
    app.kubernetes.io/instance: kubecost
    app.kubernetes.io/managed-by: Helm
    app: cost-analyzer
data:
    prometheus-alertmanager-endpoint: http://kubecost-prometheus-alertmanager.kubecost
    prometheus-server-endpoint: http://kubecost-prometheus-server.kubecost
    kubecost-token: not-applied
---
# Source: cost-analyzer/templates/cost-analyzer-frontend-config-map-template.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: nginx-conf
  namespace: kubecost
  labels:
    
    app.kubernetes.io/name: cost-analyzer
    helm.sh/chart: cost-analyzer-2.4.0
    app.kubernetes.io/instance: kubecost
    app.kubernetes.io/managed-by: Helm
    app: cost-analyzer
data:
  nginx.conf: |
    gzip_static  on;

    # Enable gzip encoding for content of the provided types of 50kb and higher.
    gzip on;
    gzip_min_length 50000;
    gzip_proxied expired no-cache no-store private auth;
    gzip_types
        application/atom+xml
        application/geo+json
        application/javascript
        application/x-javascript
        application/json
        application/ld+json
        application/manifest+json
        application/rdf+xml
        application/rss+xml
        application/vnd.ms-fontobject
        application/wasm
        application/x-web-app-manifest+json
        application/xhtml+xml
        application/xml
        font/eot
        font/otf
        font/ttf
        image/bmp
        image/svg+xml
        text/cache-manifest
        text/calendar
        text/css
        text/javascript
        text/markdown
        text/plain
        text/xml
        text/x-component
        text/x-cross-domain-policy;

    upstream api {
        server kubecost-cost-analyzer.kubecost:9001;
    }

    upstream model {
        server kubecost-cost-analyzer.kubecost:9003;
    }
    upstream grafana {
        server cost-analyzer-grafana.default.svc;
    }
    upstream forecasting {
        server kubecost-forecasting.kubecost:5000;
    }
    upstream aggregator {
        server kubecost-aggregator.kubecost:9004;
    }
    upstream cloudCost {
        server kubecost-cloud-cost.kubecost:9005;
    }

    server {
        server_name _;
        root /var/www;
        index index.html;

        add_header Cache-Control "must-revalidate";
        large_client_header_buffers 4 32k;

        error_page 504 /custom_504.html;
        location = /custom_504.html {
            internal;
        }
        add_header Cache-Control "max-age=300";
        location / {
            try_files $uri $uri/ /index.html;
        }
        add_header ETag "2.4.0";
        listen 9090;
        listen [::]:9090;
        location /api/ {
            proxy_pass http://api/;
            proxy_redirect off;
            proxy_http_version 1.1;
            proxy_set_header Connection "";
            proxy_set_header  X-Real-IP  $remote_addr;
            proxy_set_header  X-Forwarded-For $proxy_add_x_forwarded_for;
        }
        location /model/ {
            proxy_connect_timeout       300;
            proxy_send_timeout          300;
            proxy_read_timeout          300;
            proxy_pass http://model/;
            proxy_redirect off;
            proxy_http_version 1.1;
            proxy_set_header Connection "";
            proxy_set_header  X-Real-IP  $remote_addr;
            proxy_set_header  X-Forwarded-For $proxy_add_x_forwarded_for;
        }

        location ~ ^/(turndown|cluster)/ {

            add_header 'Access-Control-Allow-Origin' '*' always;
            add_header 'Access-Control-Allow-Methods' 'GET, PUT, POST, DELETE, OPTIONS' always;
            return 404;
        }
        location /grafana/ {
            proxy_pass http://grafana/;
            proxy_redirect off;
            proxy_http_version 1.1;
            proxy_set_header Connection "";
            proxy_set_header  X-Real-IP  $remote_addr;
            proxy_set_header  X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header Host $http_host;
        }
    
    # TODO make aggregator route the default, start special-casing
    # cost-model APIs

    # Aggregator proxy

        location = /model/allocation {
            proxy_read_timeout          300;
            proxy_pass http://aggregator/allocation;
            proxy_redirect off;
            proxy_set_header Connection "";
            proxy_set_header  X-Real-IP  $remote_addr;
            proxy_set_header  X-Forwarded-For $proxy_add_x_forwarded_for;
        }
        location = /model/allocation/trends {
            proxy_read_timeout          300;
            proxy_pass http://aggregator/allocation/trends;
            proxy_redirect off;
            proxy_set_header Connection "";
            proxy_set_header  X-Real-IP  $remote_addr;
            proxy_set_header  X-Forwarded-For $proxy_add_x_forwarded_for;
        }
        
        location = /model/allocation/view {
            proxy_read_timeout          300;
            proxy_pass http://aggregator/allocation/view;
            proxy_redirect off;
            proxy_set_header Connection "";
            proxy_set_header  X-Real-IP  $remote_addr;
            proxy_set_header  X-Forwarded-For $proxy_add_x_forwarded_for;
        }
        location = /model/allocation/summary {
            proxy_read_timeout          300;
            proxy_pass http://aggregator/allocation/summary;
            proxy_redirect off;
            proxy_set_header Connection "";
            proxy_set_header  X-Real-IP  $remote_addr;
            proxy_set_header  X-Forwarded-For $proxy_add_x_forwarded_for;
        }
        location = /model/allocation/summary/topline {
            proxy_read_timeout          300;
            proxy_pass http://aggregator/allocation/summary/topline;
            proxy_redirect off;
            proxy_set_header Connection "";
            proxy_set_header  X-Real-IP  $remote_addr;
            proxy_set_header  X-Forwarded-For $proxy_add_x_forwarded_for;
        }
        location = /model/allocation/autocomplete {
            proxy_read_timeout          300;
            proxy_pass http://aggregator/allocation/autocomplete;
            proxy_redirect off;
            proxy_set_header Connection "";
            proxy_set_header  X-Real-IP  $remote_addr;
            proxy_set_header  X-Forwarded-For $proxy_add_x_forwarded_for;
        }
        location = /model/allocation/carbon {
            proxy_read_timeout          300;
            proxy_pass http://aggregator/allocation/carbon;
            proxy_redirect off;
            proxy_set_header Connection "";
            proxy_set_header  X-Real-IP  $remote_addr;
            proxy_set_header  X-Forwarded-For $proxy_add_x_forwarded_for;
        }
        location = /model/assets {
            proxy_read_timeout          300;
            proxy_pass http://aggregator/assets;
            proxy_redirect off;
            proxy_set_header Connection "";
            proxy_set_header  X-Real-IP  $remote_addr;
            proxy_set_header  X-Forwarded-For $proxy_add_x_forwarded_for;
        }
        location = /model/assets/topline {
            proxy_read_timeout          300;
            proxy_pass http://aggregator/assets/topline;
            proxy_redirect off;
            proxy_set_header Connection "";
            proxy_set_header  X-Real-IP  $remote_addr;
            proxy_set_header  X-Forwarded-For $proxy_add_x_forwarded_for;
        }
        location = /model/assets/graph {
            proxy_read_timeout          300;
            proxy_pass http://aggregator/assets/graph;
            proxy_redirect off;
            proxy_set_header Connection "";
            proxy_set_header  X-Real-IP  $remote_addr;
            proxy_set_header  X-Forwarded-For $proxy_add_x_forwarded_for;
        }
        location = /model/assets/totals {
            return 501 "<b>Aggregator does not support this endpoint.</b>";
        }
        location = /model/assets/diff {
            return 501 "<b>Aggregator does not support this endpoint.</b>";
        }
        location = /model/assets/breakdown {
            return 501 "<b>Aggregator does not support this endpoint.</b>";
        }
        location = /model/assets/autocomplete {
            proxy_read_timeout          300;
            proxy_pass http://aggregator/assets/autocomplete;
            proxy_redirect off;
            proxy_set_header Connection "";
            proxy_set_header  X-Real-IP  $remote_addr;
            proxy_set_header  X-Forwarded-For $proxy_add_x_forwarded_for;
        }
        location = /model/assets/carbon {
            proxy_read_timeout          300;
            proxy_pass http://aggregator/assets/carbon;
            proxy_redirect off;
            proxy_set_header Connection "";
            proxy_set_header  X-Real-IP  $remote_addr;
            proxy_set_header  X-Forwarded-For $proxy_add_x_forwarded_for;
        }
        location = /model/savings/requestSizingV2 {
            proxy_read_timeout          300;
            proxy_pass http://aggregator/savings/requestSizingV2;
            proxy_redirect off;
            proxy_set_header Connection "";
            proxy_set_header  X-Real-IP  $remote_addr;
            proxy_set_header  X-Forwarded-For $proxy_add_x_forwarded_for;
        }
        location = /model/savings/requestSizingV2/topline {
            proxy_read_timeout          300;
            proxy_pass http://aggregator/savings/requestSizingV2/topline;
            proxy_redirect off;
            proxy_set_header Connection "";
            proxy_set_header  X-Real-IP  $remote_addr;
            proxy_set_header  X-Forwarded-For $proxy_add_x_forwarded_for;
        }
        location = /model/savings/clusterSizingETL {
            proxy_read_timeout          300;
            proxy_pass http://aggregator/savings/clusterSizingETL;
            proxy_redirect off;
            proxy_set_header Connection "";
            proxy_set_header  X-Real-IP  $remote_addr;
            proxy_set_header  X-Forwarded-For $proxy_add_x_forwarded_for;
        }
        location = /model/savings/nodeGroupSizingETL {
            proxy_read_timeout          300;
            proxy_pass http://aggregator/savings/nodeGroupSizingETL;
            proxy_redirect off;
            proxy_set_header Connection "";
            proxy_set_header  X-Real-IP  $remote_addr;
            proxy_set_header  X-Forwarded-For $proxy_add_x_forwarded_for;
        }
        location = /model/savings/recommendations/allowLists {
            proxy_read_timeout          300;
            proxy_pass http://aggregator/savings/recommendations/allowLists;
            proxy_redirect off;
            proxy_set_header Connection "";
            proxy_set_header  X-Real-IP  $remote_addr;
            proxy_set_header  X-Forwarded-For $proxy_add_x_forwarded_for;
        }
        location = /model/cloudCost {
            proxy_read_timeout          300;
            proxy_pass http://aggregator/cloudCost;
            proxy_redirect off;
            proxy_set_header Connection "";
            proxy_set_header  X-Real-IP  $remote_addr;
            proxy_set_header  X-Forwarded-For $proxy_add_x_forwarded_for;
        }
        location = /model/cloudCost/view/graph {
            proxy_read_timeout          300;
            proxy_pass http://aggregator/cloudCost/view/graph;
            proxy_redirect off;
            proxy_set_header Connection "";
            proxy_set_header  X-Real-IP  $remote_addr;
            proxy_set_header  X-Forwarded-For $proxy_add_x_forwarded_for;
        }
        location = /model/cloudCost/view/totals {
            proxy_read_timeout          300;
            proxy_pass http://aggregator/cloudCost/view/totals;
            proxy_redirect off;
            proxy_set_header Connection "";
            proxy_set_header  X-Real-IP  $remote_addr;
            proxy_set_header  X-Forwarded-For $proxy_add_x_forwarded_for;
        }
        location = /model/cloudCost/view/table {
            proxy_read_timeout          300;
            proxy_pass http://aggregator/cloudCost/view/table;
            proxy_redirect off;
            proxy_set_header Connection "";
            proxy_set_header  X-Real-IP  $remote_addr;
            proxy_set_header  X-Forwarded-For $proxy_add_x_forwarded_for;
        }
        location = /model/cloudCost/view/trends {
            proxy_read_timeout          300;
            proxy_pass http://aggregator/cloudCost/view/trends;
            proxy_redirect off;
            proxy_set_header Connection "";
            proxy_set_header  X-Real-IP  $remote_addr;
            proxy_set_header  X-Forwarded-For $proxy_add_x_forwarded_for;
        }
        location = /model/cloudCost/autocomplete {
            proxy_read_timeout          300;
            proxy_pass http://aggregator/cloudCost/autocomplete;
            proxy_redirect off;
            proxy_set_header Connection "";
            proxy_set_header  X-Real-IP  $remote_addr;
            proxy_set_header  X-Forwarded-For $proxy_add_x_forwarded_for;
        }
        location = /model/clusters/status {
            proxy_read_timeout          300;
            proxy_pass http://aggregator/clusters/status;
            proxy_redirect off;
            proxy_set_header Connection "";
            proxy_set_header  X-Real-IP  $remote_addr;
            proxy_set_header  X-Forwarded-For $proxy_add_x_forwarded_for;
        }
        location = /model/savings {
            proxy_read_timeout          300;
            proxy_pass http://aggregator/savings;
            proxy_redirect off;
            proxy_set_header Connection "";
            proxy_set_header  X-Real-IP  $remote_addr;
            proxy_set_header  X-Forwarded-For $proxy_add_x_forwarded_for;
        }
        location = /model/savings/abandonedWorkloads {
            proxy_read_timeout          300;
            proxy_pass http://aggregator/savings/abandonedWorkloads;
            proxy_redirect off;
            proxy_set_header Connection "";
            proxy_set_header  X-Real-IP  $remote_addr;
            proxy_set_header  X-Forwarded-For $proxy_add_x_forwarded_for;
        }
        location = /model/savings/abandonedWorkloads/topline {
            proxy_read_timeout          300;
            proxy_pass http://aggregator/savings/abandonedWorkloads/topline;
            proxy_redirect off;
            proxy_set_header Connection "";
            proxy_set_header  X-Real-IP  $remote_addr;
            proxy_set_header  X-Forwarded-For $proxy_add_x_forwarded_for;
        }
        location = /model/savings/unclaimedVolumes {
            proxy_read_timeout          300;
            proxy_pass http://aggregator/savings/unclaimedVolumes;
            proxy_redirect off;
            proxy_set_header Connection "";
            proxy_set_header  X-Real-IP  $remote_addr;
            proxy_set_header  X-Forwarded-For $proxy_add_x_forwarded_for;
        }
        location = /model/savings/localLowDisks {
            proxy_read_timeout          300;
            proxy_pass http://aggregator/savings/localLowDisks;
            proxy_redirect off;
            proxy_set_header Connection "";
            proxy_set_header  X-Real-IP  $remote_addr;
            proxy_set_header  X-Forwarded-For $proxy_add_x_forwarded_for;
        }
        location = /model/savings/persistentVolumeSizing {
            proxy_read_timeout          300;
            proxy_pass http://aggregator/savings/persistentVolumeSizing;
            proxy_redirect off;
            proxy_set_header Connection "";
            proxy_set_header  X-Real-IP  $remote_addr;
            proxy_set_header  X-Forwarded-For $proxy_add_x_forwarded_for;
        }
        location = /model/savings/persistentVolumeSizing/topline {
            proxy_read_timeout          300;
            proxy_pass http://aggregator/savings/persistentVolumeSizing/topline;
            proxy_redirect off;
            proxy_set_header Connection "";
            proxy_set_header  X-Real-IP  $remote_addr;
            proxy_set_header  X-Forwarded-For $proxy_add_x_forwarded_for;
        }
        location = /model/reports/allocation {
            proxy_read_timeout          300;
            proxy_pass http://aggregator/reports/allocation;
            proxy_redirect off;
            proxy_set_header Connection "";
            proxy_set_header  X-Real-IP  $remote_addr;
            proxy_set_header  X-Forwarded-For $proxy_add_x_forwarded_for;
        }
        location = /model/reports/asset {
            proxy_read_timeout          300;
            proxy_pass http://aggregator/reports/asset;
            proxy_redirect off;
            proxy_set_header Connection "";
            proxy_set_header  X-Real-IP  $remote_addr;
            proxy_set_header  X-Forwarded-For $proxy_add_x_forwarded_for;
        }
        location = /model/reports/cloudCost {
            proxy_read_timeout          300;
            proxy_pass http://aggregator/reports/cloudCost;
            proxy_redirect off;
            proxy_set_header Connection "";
            proxy_set_header  X-Real-IP  $remote_addr;
            proxy_set_header  X-Forwarded-For $proxy_add_x_forwarded_for;
        }
        location = /model/reports/group {
            proxy_read_timeout          300;
            proxy_pass http://aggregator/reports/group;
            proxy_redirect off;
            proxy_set_header Connection "";
            proxy_set_header  X-Real-IP  $remote_addr;
            proxy_set_header  X-Forwarded-For $proxy_add_x_forwarded_for;
        }
        # this is a special case to handle /reports/group/:group in the Kubecost Aggregator. prior to aggregator, this endpoint
        # was handled by /model/, so no special case proxies were required. without this, /model/reports/groups/?foo=bar
        # will be directed to /reports/groups?foo=bar (note the missing /model prefix)
        location ~ ^/model/reports/group/ {
            proxy_read_timeout          300;
            proxy_pass http://aggregator/reports/group/$is_args$args;
            proxy_set_header Connection "";
            proxy_set_header  X-Real-IP  $remote_addr;
            proxy_set_header  X-Forwarded-For $proxy_add_x_forwarded_for;
        }
        location = /model/budget {
            proxy_read_timeout          300;
            proxy_pass http://aggregator/budget;
            proxy_redirect off;
            proxy_set_header Connection "";
            proxy_set_header  X-Real-IP  $remote_addr;
            proxy_set_header  X-Forwarded-For $proxy_add_x_forwarded_for;
        }
        location = /model/budgets {
            proxy_read_timeout          300;
            proxy_pass http://aggregator/budgets;
            proxy_redirect off;
            proxy_set_header Connection "";
            proxy_set_header  X-Real-IP  $remote_addr;
            proxy_set_header  X-Forwarded-For $proxy_add_x_forwarded_for;
        }
        location = /model/collection {
            proxy_read_timeout          300;
            proxy_pass http://aggregator/collection;
            proxy_redirect off;
            proxy_set_header Connection "";
            proxy_set_header  X-Real-IP  $remote_addr;
            proxy_set_header  X-Forwarded-For $proxy_add_x_forwarded_for;
        }
        location = /model/collections {
            proxy_read_timeout          300;
            proxy_pass http://aggregator/collections;
            proxy_redirect off;
            proxy_set_header Connection "";
            proxy_set_header  X-Real-IP  $remote_addr;
            proxy_set_header  X-Forwarded-For $proxy_add_x_forwarded_for;
        }
        location = /model/collection/query/total {
            proxy_read_timeout          300;
            proxy_pass http://aggregator/collection/query/total;
            proxy_redirect off;
            proxy_set_header Connection "";
            proxy_set_header  X-Real-IP  $remote_addr;
            proxy_set_header  X-Forwarded-For $proxy_add_x_forwarded_for;
        }
        location = /model/collection/query/timeseries {
            proxy_read_timeout          300;
            proxy_pass http://aggregator/collection/query/timeseries;
            proxy_redirect off;
            proxy_set_header Connection "";
            proxy_set_header  X-Real-IP  $remote_addr;
            proxy_set_header  X-Forwarded-For $proxy_add_x_forwarded_for;
        }
        location = /model/collection/query/complement {
            proxy_read_timeout          300;
            proxy_pass http://aggregator/collection/query/complement;
            proxy_redirect off;
            proxy_set_header Connection "";
            proxy_set_header  X-Real-IP  $remote_addr;
            proxy_set_header  X-Forwarded-For $proxy_add_x_forwarded_for;
        }
        location = /model/collection/query/complement/cloud {
            proxy_read_timeout          300;
            proxy_pass http://aggregator/collection/query/complement/cloud;
            proxy_redirect off;
            proxy_set_header Connection "";
            proxy_set_header  X-Real-IP  $remote_addr;
            proxy_set_header  X-Forwarded-For $proxy_add_x_forwarded_for;
        }
        location = /model/collection/query/complement/kubernetes {
            proxy_read_timeout          300;
            proxy_pass http://aggregator/collection/query/complement/kubernetes;
            proxy_redirect off;
            proxy_set_header Connection "";
            proxy_set_header  X-Real-IP  $remote_addr;
            proxy_set_header  X-Forwarded-For $proxy_add_x_forwarded_for;
        }

        location = /model/collections/query/total {
            proxy_read_timeout          300;
            proxy_pass http://aggregator/collections/query/total;
            proxy_redirect off;
            proxy_set_header Connection "";
            proxy_set_header  X-Real-IP  $remote_addr;
            proxy_set_header  X-Forwarded-For $proxy_add_x_forwarded_for;
        }
        location = /model/collections/query/timeseries {
            proxy_read_timeout          300;
            proxy_pass http://aggregator/collections/query/timeseries;
            proxy_redirect off;
            proxy_set_header Connection "";
            proxy_set_header  X-Real-IP  $remote_addr;
            proxy_set_header  X-Forwarded-For $proxy_add_x_forwarded_for;
        }
        location = /model/collections/query/complement {
            proxy_read_timeout          300;
            proxy_pass http://aggregator/collections/query/complement;
            proxy_redirect off;
            proxy_set_header Connection "";
            proxy_set_header  X-Real-IP  $remote_addr;
            proxy_set_header  X-Forwarded-For $proxy_add_x_forwarded_for;
        }
        location = /model/collections/query/complement/cloud {
            proxy_read_timeout          300;
            proxy_pass http://aggregator/collections/query/complement/cloud;
            proxy_redirect off;
            proxy_set_header Connection "";
            proxy_set_header  X-Real-IP  $remote_addr;
            proxy_set_header  X-Forwarded-For $proxy_add_x_forwarded_for;
        }
        location = /model/collections/query/complement/kubernetes {
            proxy_read_timeout          300;
            proxy_pass http://aggregator/collections/query/complement/kubernetes;
            proxy_redirect off;
            proxy_set_header Connection "";
            proxy_set_header  X-Real-IP  $remote_addr;
            proxy_set_header  X-Forwarded-For $proxy_add_x_forwarded_for;
        }
        location = /model/collection/cache/status {
            proxy_read_timeout          300;
            proxy_pass http://aggregator/collection/cache/status;
            proxy_redirect off;
            proxy_set_header Connection "";
            proxy_set_header  X-Real-IP  $remote_addr;
            proxy_set_header  X-Forwarded-For $proxy_add_x_forwarded_for;
        }
        location = /model/collection/configs {
            proxy_read_timeout          300;
            proxy_pass http://aggregator/collection/configs;
            proxy_redirect off;
            proxy_set_header Connection "";
            proxy_set_header  X-Real-IP  $remote_addr;
            proxy_set_header  X-Forwarded-For $proxy_add_x_forwarded_for;
        }
        location = /model/kubernetes/containers/resources {
            proxy_read_timeout          300;
            proxy_pass http://aggregator/kubernetes/containers/resources;
            proxy_redirect off;
            proxy_set_header Connection "";
            proxy_set_header  X-Real-IP  $remote_addr;
            proxy_set_header  X-Forwarded-For $proxy_add_x_forwarded_for;
        }
        location = /model/kubernetes/containers/resources/timeseries {
            proxy_read_timeout          300;
            proxy_pass http://aggregator/kubernetes/containers/resources/timeseries;
            proxy_redirect off;
            proxy_set_header Connection "";
            proxy_set_header  X-Real-IP  $remote_addr;
            proxy_set_header  X-Forwarded-For $proxy_add_x_forwarded_for;
        }
        location = /model/kubernetes/containers/costs {
            proxy_read_timeout          300;
            proxy_pass http://aggregator/kubernetes/containers/costs;
            proxy_redirect off;
            proxy_set_header Connection "";
            proxy_set_header  X-Real-IP  $remote_addr;
            proxy_set_header  X-Forwarded-For $proxy_add_x_forwarded_for;
        }
        location = /model/kubernetes/containers/costs/timeseries {
            proxy_read_timeout          300;
            proxy_pass http://aggregator/kubernetes/containers/costs/timeseries;
            proxy_redirect off;
            proxy_set_header Connection "";
            proxy_set_header  X-Real-IP  $remote_addr;
            proxy_set_header  X-Forwarded-For $proxy_add_x_forwarded_for;
        }
        location = /model/networkinsights {
            proxy_read_timeout          300;
            proxy_pass http://aggregator/networkinsights;
            proxy_redirect off;
            proxy_set_header Connection "";
            proxy_set_header  X-Real-IP  $remote_addr;
            proxy_set_header  X-Forwarded-For $proxy_add_x_forwarded_for;
        }
        location = /model/networkinsights/graph {
            proxy_read_timeout          300;
            proxy_pass http://aggregator/networkinsights/graph;
            proxy_redirect off;
            proxy_set_header Connection "";
            proxy_set_header  X-Real-IP  $remote_addr;
            proxy_set_header  X-Forwarded-For $proxy_add_x_forwarded_for;
        }
        location = /model/rbacGroups {
            proxy_read_timeout          300;
            proxy_pass http://aggregator/rbacGroups;
            proxy_redirect off;
            proxy_set_header Connection "";
            proxy_set_header  X-Real-IP  $remote_addr;
            proxy_set_header  X-Forwarded-For $proxy_add_x_forwarded_for;
        }
        location = /model/smtp {
            proxy_read_timeout          300;
            proxy_pass http://aggregator/smtp;
            proxy_redirect off;
            proxy_set_header Connection "";
            proxy_set_header  X-Real-IP  $remote_addr;
            proxy_set_header  X-Forwarded-For $proxy_add_x_forwarded_for;
        }
        location = /model/smtp/test {
            proxy_read_timeout          300;
            proxy_pass http://aggregator/smtp/test;
            proxy_redirect off;
            proxy_set_header Connection "";
            proxy_set_header  X-Real-IP  $remote_addr;
            proxy_set_header  X-Forwarded-For $proxy_add_x_forwarded_for;
        }
        location = /model/teams {
            proxy_read_timeout          300;
            proxy_pass http://aggregator/teams;
            proxy_redirect off;
            proxy_set_header Connection "";
            proxy_set_header  X-Real-IP  $remote_addr;
            proxy_set_header  X-Forwarded-For $proxy_add_x_forwarded_for;
        }
        location = /model/team {
            proxy_read_timeout          300;
            proxy_pass http://aggregator/team;
            proxy_redirect off;
            proxy_set_header Connection "";
            proxy_set_header  X-Real-IP  $remote_addr;
            proxy_set_header  X-Forwarded-For $proxy_add_x_forwarded_for;
        }
        location = /model/users {
            proxy_read_timeout          300;
            proxy_pass http://aggregator/users;
            proxy_redirect off;
            proxy_set_header Connection "";
            proxy_set_header  X-Real-IP  $remote_addr;
            proxy_set_header  X-Forwarded-For $proxy_add_x_forwarded_for;
        }
        location = /model/user {
            proxy_read_timeout          300;
            proxy_pass http://aggregator/user;
            proxy_redirect off;
            proxy_set_header Connection "";
            proxy_set_header  X-Real-IP  $remote_addr;
            proxy_set_header  X-Forwarded-For $proxy_add_x_forwarded_for;
        }
        location = /model/serviceAccounts {
            proxy_read_timeout          300;
            proxy_pass http://aggregator/serviceAccounts;
            proxy_redirect off;
            proxy_set_header Connection "";
            proxy_set_header  X-Real-IP  $remote_addr;
            proxy_set_header  X-Forwarded-For $proxy_add_x_forwarded_for;
        }
        location = /model/serviceAccount {
            proxy_read_timeout          300;
            proxy_pass http://aggregator/serviceAccount;
            proxy_redirect off;
            proxy_set_header Connection "";
            proxy_set_header  X-Real-IP  $remote_addr;
            proxy_set_header  X-Forwarded-For $proxy_add_x_forwarded_for;
        }
        location = /model/debug/orchestrator {
            proxy_read_timeout          300;
            proxy_pass http://aggregator/debug/orchestrator;
            proxy_redirect off;
            proxy_set_header Connection "";
            proxy_set_header  X-Real-IP  $remote_addr;
            proxy_set_header  X-Forwarded-For $proxy_add_x_forwarded_for;
        }
        location = /model/prediction/speccost {
            proxy_read_timeout          300;
            proxy_pass http://aggregator/prediction/speccost;
            proxy_redirect off;
            proxy_set_header Connection "";
            proxy_set_header  X-Real-IP  $remote_addr;
            proxy_set_header  X-Forwarded-For $proxy_add_x_forwarded_for;
        }
        location = /model/diagnostic/coreCount {
            proxy_read_timeout          300;
            proxy_pass http://aggregator/diagnostic/coreCount;
            proxy_redirect off;
            proxy_set_header Connection "";
            proxy_set_header  X-Real-IP  $remote_addr;
            proxy_set_header  X-Forwarded-For $proxy_add_x_forwarded_for;
        }
        location = /model/diagnostic/tableWindowCount {
            proxy_read_timeout          300;
            proxy_pass http://aggregator/diagnostic/tableWindowCount;
            proxy_redirect off;
            proxy_set_header Connection "";
            proxy_set_header  X-Real-IP  $remote_addr;
            proxy_set_header  X-Forwarded-For $proxy_add_x_forwarded_for;
        }
        location = /model/diagnostic/containersPerDay {
            proxy_read_timeout          300;
            proxy_pass http://aggregator/diagnostic/containersPerDay;
            proxy_redirect off;
            proxy_set_header Connection "";
            proxy_set_header  X-Real-IP  $remote_addr;
            proxy_set_header  X-Forwarded-For $proxy_add_x_forwarded_for;
        }
        location = /model/diagnostic/nodesPerDay {
            proxy_read_timeout          300;
            proxy_pass http://aggregator/diagnostic/nodesPerDay;
            proxy_redirect off;
            proxy_set_header Connection "";
            proxy_set_header  X-Real-IP  $remote_addr;
            proxy_set_header  X-Forwarded-For $proxy_add_x_forwarded_for;
        }
        location = /model/diagnostic/containerLabelStats {
            proxy_read_timeout          300;
            proxy_pass http://aggregator/diagnostic/containerLabelStats;
            proxy_redirect off;
            proxy_set_header Connection "";
            proxy_set_header  X-Real-IP  $remote_addr;
            proxy_set_header  X-Forwarded-For $proxy_add_x_forwarded_for;
        }
        location = /model/diagnostic/containerAnnotationStats {
            proxy_read_timeout          300;
            proxy_pass http://aggregator/diagnostic/containerAnnotationStats;
            proxy_redirect off;
            proxy_set_header Connection "";
            proxy_set_header  X-Real-IP  $remote_addr;
            proxy_set_header  X-Forwarded-For $proxy_add_x_forwarded_for;
        }
        location = /model/diagnostic/cloudCostsPerDay {
            proxy_read_timeout          300;
            proxy_pass http://aggregator/diagnostic/cloudCostsPerDay;
            proxy_redirect off;
            proxy_set_header Connection "";
            proxy_set_header  X-Real-IP  $remote_addr;
            proxy_set_header  X-Forwarded-For $proxy_add_x_forwarded_for;
        }
        location = /model/diagnostic/containerWithoutMatchingNode {
            proxy_read_timeout          300;
            proxy_pass http://aggregator/diagnostic/containerWithoutMatchingNode;
            proxy_redirect off;
            proxy_set_header Connection "";
            proxy_set_header  X-Real-IP  $remote_addr;
            proxy_set_header  X-Forwarded-For $proxy_add_x_forwarded_for;
        }
        location = /model/diagnostic/containerDuplicateNoId {
            proxy_read_timeout          300;
            proxy_pass http://aggregator/diagnostic/containerDuplicateNoId;
            proxy_redirect off;
            proxy_set_header Connection "";
            proxy_set_header  X-Real-IP  $remote_addr;
            proxy_set_header  X-Forwarded-For $proxy_add_x_forwarded_for;
        }
        location = /model/diagnostic/containerDuplicateWithId {
            proxy_read_timeout          300;
            proxy_pass http://aggregator/diagnostic/containerDuplicateWithId;
            proxy_redirect off;
            proxy_set_header Connection "";
            proxy_set_header  X-Real-IP  $remote_addr;
            proxy_set_header  X-Forwarded-For $proxy_add_x_forwarded_for;
        }
        location = /model/diagnostic/nodeDuplicateNoId {
            proxy_read_timeout          300;
            proxy_pass http://aggregator/diagnostic/nodeDuplicateNoId;
            proxy_redirect off;
            proxy_set_header Connection "";
            proxy_set_header  X-Real-IP  $remote_addr;
            proxy_set_header  X-Forwarded-For $proxy_add_x_forwarded_for;
        }
        location = /model/debug/ingestionRecords {
            proxy_read_timeout          300;
            proxy_pass http://aggregator/debug/ingestionRecords;
            proxy_redirect off;
            proxy_set_header Connection "";
            proxy_set_header  X-Real-IP  $remote_addr;
            proxy_set_header  X-Forwarded-For $proxy_add_x_forwarded_for;
        }
        location = /model/debug/ingestionSummary {
            proxy_read_timeout          300;
            proxy_pass http://aggregator/debug/ingestionSummary;
            proxy_redirect off;
            proxy_set_header Connection "";
            proxy_set_header  X-Real-IP  $remote_addr;
            proxy_set_header  X-Forwarded-For $proxy_add_x_forwarded_for;
        }
        location = /model/debug/derivationRecords {
            proxy_read_timeout          300;
            proxy_pass http://aggregator/debug/derivationRecords;
            proxy_redirect off;
            proxy_set_header Connection "";
            proxy_set_header  X-Real-IP  $remote_addr;
            proxy_set_header  X-Forwarded-For $proxy_add_x_forwarded_for;
        }
        location = /model/diagnostic/databaseDirectory {
            proxy_read_timeout          300;
            proxy_pass http://aggregator/diagnostic/databaseDirectory;
            proxy_redirect off;
            proxy_set_header Connection "";
            proxy_set_header  X-Real-IP  $remote_addr;
            proxy_set_header  X-Forwarded-For $proxy_add_x_forwarded_for;
        }
        location = /model/getApiConfig {
            proxy_read_timeout          300;
            proxy_pass http://aggregator/getApiConfig;
            proxy_redirect off;
            proxy_set_header Connection "";
            proxy_set_header  X-Real-IP  $remote_addr;
            proxy_set_header  X-Forwarded-For $proxy_add_x_forwarded_for;
        }
        location = /model/setApiConfig {
            proxy_read_timeout          300;
            proxy_pass http://aggregator/setApiConfig;
            proxy_redirect off;
            proxy_set_header Connection "";
            proxy_set_header  X-Real-IP  $remote_addr;
            proxy_set_header  X-Forwarded-For $proxy_add_x_forwarded_for;
        }
         location = /model/getIngestionConfig {
            proxy_read_timeout          300;
            proxy_pass http://aggregator/getIngestionConfig;
            proxy_redirect off;
            proxy_set_header Connection "";
            proxy_set_header  X-Real-IP  $remote_addr;
            proxy_set_header  X-Forwarded-For $proxy_add_x_forwarded_for;
        }
        location = /model/setIngestionConfig {
            proxy_read_timeout          300;
            proxy_pass http://aggregator/setIngestionConfig;
            proxy_redirect off;
            proxy_set_header Connection "";
            proxy_set_header  X-Real-IP  $remote_addr;
            proxy_set_header  X-Forwarded-For $proxy_add_x_forwarded_for;
        }
        location = /model/enablements {
            proxy_read_timeout          300;
            proxy_pass http://aggregator/enablements;
            proxy_redirect off;
            proxy_set_header Connection "";
            proxy_set_header  X-Real-IP  $remote_addr;
            proxy_set_header  X-Forwarded-For $proxy_add_x_forwarded_for;
        }
        location = /model/customCost/total {
            proxy_read_timeout          300;
            proxy_pass http://aggregator/customCost/total;
            proxy_redirect off;
            proxy_set_header Connection "";
            proxy_set_header  X-Real-IP  $remote_addr;
            proxy_set_header  X-Forwarded-For $proxy_add_x_forwarded_for;
        }
        location = /model/customCost/timeseries {
            proxy_read_timeout          300;
            proxy_pass http://aggregator/customCost/timeseries;
            proxy_redirect off;
            proxy_set_header Connection "";
            proxy_set_header  X-Real-IP  $remote_addr;
            proxy_set_header  X-Forwarded-For $proxy_add_x_forwarded_for;
        }
        location = /model/providerOptimization {
            proxy_read_timeout          300;
            proxy_pass http://aggregator/providerOptimization;
            proxy_redirect off;
            proxy_set_header Connection "";
            proxy_set_header  X-Real-IP  $remote_addr;
            proxy_set_header  X-Forwarded-For $proxy_add_x_forwarded_for;
        }

        location = /model/getProductKey {
            proxy_read_timeout          300;
            proxy_pass http://aggregator/getProductKey;
            proxy_redirect off;
            proxy_set_header Connection "";
            proxy_set_header  X-Real-IP  $remote_addr;
            proxy_set_header  X-Forwarded-For $proxy_add_x_forwarded_for;
        }
        location = /model/setProductKey {
            proxy_read_timeout          300;
            proxy_pass http://aggregator/setProductKey;
            proxy_redirect off;
            proxy_set_header Connection "";
            proxy_set_header  X-Real-IP  $remote_addr;
            proxy_set_header  X-Forwarded-For $proxy_add_x_forwarded_for;
        }
        location = /model/trialStatus {
            proxy_read_timeout          300;
            proxy_pass http://aggregator/trialStatus;
            proxy_redirect off;
            proxy_set_header Connection "";
            proxy_set_header  X-Real-IP  $remote_addr;
            proxy_set_header  X-Forwarded-For $proxy_add_x_forwarded_for;
        }
        location = /model/startProductTrial {
            proxy_read_timeout          300;
            proxy_pass http://aggregator/startProductTrial;
            proxy_redirect off;
            proxy_set_header Connection "";
            proxy_set_header  X-Real-IP  $remote_addr;
            proxy_set_header  X-Forwarded-For $proxy_add_x_forwarded_for;
        }
        location = /model/resetProductTrial {
            proxy_read_timeout          300;
            proxy_pass http://aggregator/resetProductTrial;
            proxy_redirect off;
            proxy_set_header Connection "";
            proxy_set_header  X-Real-IP  $remote_addr;
            proxy_set_header  X-Forwarded-For $proxy_add_x_forwarded_for;
        }
        location = /model/extendProductTrial {
            proxy_read_timeout          300;
            proxy_pass http://aggregator/extendProductTrial;
            proxy_redirect off;
            proxy_set_header Connection "";
            proxy_set_header  X-Real-IP  $remote_addr;
            proxy_set_header  X-Forwarded-For $proxy_add_x_forwarded_for;
        }
        location = /model/expireProductTrial {
            proxy_read_timeout          300;
            proxy_pass http://aggregator/expireProductTrial;
            proxy_redirect off;
            proxy_set_header Connection "";
            proxy_set_header  X-Real-IP  $remote_addr;
            proxy_set_header  X-Forwarded-For $proxy_add_x_forwarded_for;
        }

        #Cloud Cost Endpoints
        location = /model/cloudCost/status {
            proxy_read_timeout          300;
            proxy_pass http://cloudCost/cloudCost/status;
            proxy_redirect off;
            proxy_set_header Connection "";
            proxy_set_header  X-Real-IP  $remote_addr;
            proxy_set_header  X-Forwarded-For $proxy_add_x_forwarded_for;
        }
        location = /model/cloudCost/rebuild {
            proxy_read_timeout          300;
            proxy_pass http://cloudCost/cloudCost/rebuild;
            proxy_redirect off;
            proxy_set_header Connection "";
            proxy_set_header  X-Real-IP  $remote_addr;
            proxy_set_header  X-Forwarded-For $proxy_add_x_forwarded_for;
        }
        location = /model/cloudCost/repair {
            proxy_read_timeout          300;
            proxy_pass http://cloudCost/cloudCost/repair;
            proxy_redirect off;
            proxy_set_header Connection "";
            proxy_set_header  X-Real-IP  $remote_addr;
            proxy_set_header  X-Forwarded-For $proxy_add_x_forwarded_for;
        }
        location = /model/cloud/config {
            proxy_read_timeout          300;
            proxy_pass http://cloudCost/cloud/config;
            proxy_redirect off;
            proxy_set_header Connection "";
            proxy_set_header  X-Real-IP  $remote_addr;
            proxy_set_header  X-Forwarded-For $proxy_add_x_forwarded_for;
        }
        location = /model/cloud/config/export {
            proxy_read_timeout          300;
            proxy_pass http://cloudCost/cloud/config/export;
            proxy_redirect off;
            proxy_set_header Connection "";
            proxy_set_header  X-Real-IP  $remote_addr;
            proxy_set_header  X-Forwarded-For $proxy_add_x_forwarded_for;
        }
        location = /model/cloud/config/enable {
            proxy_read_timeout          300;
            proxy_pass http://cloudCost/cloud/config/enable;
            proxy_redirect off;
            proxy_set_header Connection "";
            proxy_set_header  X-Real-IP  $remote_addr;
            proxy_set_header  X-Forwarded-For $proxy_add_x_forwarded_for;
        }
        location = /model/cloud/config/disable {
            proxy_read_timeout          300;
            proxy_pass http://cloudCost/cloud/config/disable;
            proxy_redirect off;
            proxy_set_header Connection "";
            proxy_set_header  X-Real-IP  $remote_addr;
            proxy_set_header  X-Forwarded-For $proxy_add_x_forwarded_for;
        }
        location = /model/cloudCost/integration/validate {
            proxy_read_timeout          300;
            proxy_pass http://cloudCost/cloudCost/integration/validate;
            proxy_redirect off;
            proxy_set_header Connection "";
            proxy_set_header  X-Real-IP  $remote_addr;
            proxy_set_header  X-Forwarded-For $proxy_add_x_forwarded_for;
        }
        location = /model/customCost/status {
            proxy_read_timeout          300;
            proxy_pass http://cloudCost/customCost/status;
            proxy_redirect off;
            proxy_set_header Connection "";
            proxy_set_header  X-Real-IP  $remote_addr;
            proxy_set_header  X-Forwarded-For $proxy_add_x_forwarded_for;
        }
        location = /model/customCost/rebuild {
            proxy_read_timeout          300;
            proxy_pass http://cloudCost/customCost/rebuild;
            proxy_redirect off;
            proxy_set_header Connection "";
            proxy_set_header  X-Real-IP  $remote_addr;
            proxy_set_header  X-Forwarded-For $proxy_add_x_forwarded_for;
        }

        # alert end points with v2 will be routed to aggregator server
        location = /model/v2/alerts {
            proxy_read_timeout          300;
            proxy_pass http://aggregator/alerts;
            proxy_redirect off;
            proxy_set_header Connection "";
            proxy_set_header  X-Real-IP  $remote_addr;
            proxy_set_header  X-Forwarded-For $proxy_add_x_forwarded_for;
        }
        location ~* ^/model/v2/alerts/(.*) {
            proxy_read_timeout          300;
            proxy_pass http://aggregator/alerts/$1;
            proxy_redirect off;
            proxy_set_header Connection "";
            proxy_set_header  X-Real-IP  $remote_addr;
            proxy_set_header  X-Forwarded-For $proxy_add_x_forwarded_for;
        }
        # alert end points without any version will be routed to model server
        location = /model/alerts {
            proxy_read_timeout          300;
            proxy_pass http://model/alerts;
            proxy_redirect off;
            proxy_set_header Connection "";
            proxy_set_header  X-Real-IP  $remote_addr;
            proxy_set_header  X-Forwarded-For $proxy_add_x_forwarded_for;
        }
        location ~* ^/model/alerts/(.*) {
            proxy_read_timeout          300;
            proxy_pass http://model/alerts/$1;
            proxy_redirect off;
            proxy_set_header Connection "";
            proxy_set_header  X-Real-IP  $remote_addr;
            proxy_set_header  X-Forwarded-For $proxy_add_x_forwarded_for;
        }
        location ~* ^/model/reports/(.*)/schedule/test {
            proxy_read_timeout          300;
            proxy_pass http://aggregator/reports/$1/schedule/test;
            proxy_redirect off;
            proxy_set_header Connection "";
            proxy_set_header  X-Real-IP  $remote_addr;
            proxy_set_header  X-Forwarded-For $proxy_add_x_forwarded_for;
        }
        location = /model/hideOrphanedResources {
            default_type 'application/json';
            add_header 'Access-Control-Allow-Origin' '*' always;
            add_header 'Access-Control-Allow-Methods' 'GET, PUT, POST, DELETE, OPTIONS' always;
            return 200 '{"hideOrphanedResources": "false"}';
        }
        location = /model/hideDiagnostics {
            default_type 'application/json';
            add_header 'Access-Control-Allow-Origin' '*' always;
            add_header 'Access-Control-Allow-Methods' 'GET, PUT, POST, DELETE, OPTIONS' always;
            return 200 '{"hideDiagnostics": "false"}';
        }

        location /model/multi-cluster-diagnostics-enabled {
            default_type 'application/json';
            add_header 'Access-Control-Allow-Origin' '*' always;
            add_header 'Access-Control-Allow-Methods' 'GET, PUT, POST, DELETE, OPTIONS' always;
            return 200 '{"multiClusterDiagnosticsEnabled": false}';
        }

        location /model/aggregatorEnabled {
            default_type 'application/json';
            return 200 '{"aggregatorEnabled": "true"}';
        }
        location /forecasting {
            default_type 'application/json';
            add_header 'Access-Control-Allow-Origin' '*' always;
            add_header 'Access-Control-Allow-Methods' 'GET, PUT, POST, DELETE, OPTIONS' always;
            proxy_read_timeout          300;
            proxy_pass http://forecasting/;
            proxy_redirect off;
            proxy_set_header Connection "";
            proxy_set_header  X-Real-IP  $remote_addr;
            proxy_set_header  X-Forwarded-For $proxy_add_x_forwarded_for;
        }

        location /model/productConfigs {
            default_type 'application/json';
            add_header 'Access-Control-Allow-Origin' '*' always;
            add_header 'Access-Control-Allow-Methods' 'GET, PUT, POST, DELETE, OPTIONS' always;
            return 200 '\n
                {
                "ssoConfigured": "false",
                "rbacTeamsEnabled": "false",
                "dataBackupConfigured": "false",
                "costEventsAuditEnabled": "false",
                "frontendDeployMethod": "singlepod",
                "pluginsEnabled": "false",
                "carbonEstimatesEnabled": "false",
                "clusterControllerEnabled": "false",
                "forecastingEnabled": "true",
                "chartVersion": "2.4.0",
                "hourlyDataRetention": "49",
                "dailyDataRetention": "91",
                "hideDiagnostics": "false",
                "hideOrphanedResources": "false",
                "hideKubecostActions": "false",
                "hideReservedInstances": "false",
                "hideSpotCommander": "false",
                "hideUnclaimedVolumes": "false",
                "hideCloudIntegrationsUI": "false",
                "hideBellIcon": "false",
                "hideTeams": "false"
                }
            ';
        }
    }
---
# Source: cost-analyzer/templates/cost-analyzer-network-costs-config-map-template.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: network-costs-config
  namespace: kubecost
  labels:
    
    app.kubernetes.io/name: cost-analyzer
    helm.sh/chart: cost-analyzer-2.4.0
    app.kubernetes.io/instance: kubecost
    app.kubernetes.io/managed-by: Helm
    app: cost-analyzer
data:
  config.yaml: |
    destinations:
      cross-region: []
      direct-classification: []
      in-region: []
      in-zone:
      - 127.0.0.0/8
      - 169.254.0.0/16
      - 10.0.0.0/8
      - 172.16.0.0/12
      - 192.168.0.0/16
      internet: []
    services:
      amazon-web-services: true
      azure-cloud-services: true
      google-cloud-services: true
---
# Source: cost-analyzer/templates/cost-analyzer-smtp-configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: smtp-configs
  namespace: kubecost
  labels:
    app.kubernetes.io/name: cost-analyzer
    helm.sh/chart: cost-analyzer-2.4.0
    app.kubernetes.io/instance: kubecost
    app.kubernetes.io/managed-by: Helm
    app: cost-analyzer
---
# Source: cost-analyzer/templates/prometheus-server-configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  labels:
    component: "server"
    app: prometheus
    release: kubecost
    heritage: Helm
  name: kubecost-prometheus-server
  namespace: kubecost
data:
  alerting_rules.yml: |
    {}
  alerts: |
    {}
  prometheus.yml: |
    global:
      evaluation_interval: 1m
      external_labels:
        cluster_id: cluster-one
      scrape_interval: 1m
      scrape_timeout: 60s
    rule_files:
    - /etc/config/recording_rules.yml
    - /etc/config/alerting_rules.yml
    - /etc/config/rules
    - /etc/config/alerts
    scrape_configs:
    - job_name: prometheus
      static_configs:
      - targets:
        - localhost:9090
    - bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
      job_name: kubernetes-nodes-cadvisor
      kubernetes_sd_configs:
      - role: node
      metric_relabel_configs:
      - action: keep
        regex: (container_cpu_usage_seconds_total|container_memory_working_set_bytes|container_network_receive_errors_total|container_network_transmit_errors_total|container_network_receive_packets_dropped_total|container_network_transmit_packets_dropped_total|container_memory_usage_bytes|container_cpu_cfs_throttled_periods_total|container_cpu_cfs_periods_total|container_fs_usage_bytes|container_fs_limit_bytes|container_cpu_cfs_periods_total|container_fs_inodes_free|container_fs_inodes_total|container_fs_usage_bytes|container_fs_limit_bytes|container_cpu_cfs_throttled_periods_total|container_cpu_cfs_periods_total|container_network_receive_bytes_total|container_network_transmit_bytes_total|container_fs_inodes_free|container_fs_inodes_total|container_fs_usage_bytes|container_fs_limit_bytes|container_spec_cpu_shares|container_spec_memory_limit_bytes|container_network_receive_bytes_total|container_network_transmit_bytes_total|container_fs_reads_bytes_total|container_network_receive_bytes_total|container_fs_writes_bytes_total|container_fs_reads_bytes_total|cadvisor_version_info|kubecost_pv_info)
        source_labels:
        - __name__
      - action: replace
        regex: (.+)
        source_labels:
        - container
        target_label: container_name
      - action: replace
        regex: (.+)
        source_labels:
        - pod
        target_label: pod_name
      relabel_configs:
      - action: labelmap
        regex: __meta_kubernetes_node_label_(.+)
      - replacement: kubernetes.default.svc:443
        target_label: __address__
      - regex: (.+)
        replacement: /api/v1/nodes/$1/proxy/metrics/cadvisor
        source_labels:
        - __meta_kubernetes_node_name
        target_label: __metrics_path__
      scheme: https
      tls_config:
        ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
        insecure_skip_verify: true
    - bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
      job_name: kubernetes-nodes
      kubernetes_sd_configs:
      - role: node
      metric_relabel_configs:
      - action: keep
        regex: (kubelet_volume_stats_used_bytes)
        source_labels:
        - __name__
      relabel_configs:
      - action: labelmap
        regex: __meta_kubernetes_node_label_(.+)
      - replacement: kubernetes.default.svc:443
        target_label: __address__
      - regex: (.+)
        replacement: /api/v1/nodes/$1/proxy/metrics
        source_labels:
        - __meta_kubernetes_node_name
        target_label: __metrics_path__
      scheme: https
      tls_config:
        ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
        insecure_skip_verify: true
    - job_name: kubernetes-service-endpoints
      kubernetes_sd_configs:
      - role: endpoints
      metric_relabel_configs:
      - action: keep
        regex: (container_cpu_allocation|container_cpu_usage_seconds_total|container_fs_limit_bytes|container_fs_writes_bytes_total|container_gpu_allocation|container_memory_allocation_bytes|container_memory_usage_bytes|container_memory_working_set_bytes|container_network_receive_bytes_total|container_network_transmit_bytes_total|DCGM_FI_DEV_GPU_UTIL|deployment_match_labels|kube_daemonset_status_desired_number_scheduled|kube_daemonset_status_number_ready|kube_deployment_spec_replicas|kube_deployment_status_replicas|kube_deployment_status_replicas_available|kube_job_status_failed|kube_namespace_annotations|kube_namespace_labels|kube_node_info|kube_node_labels|kube_node_status_allocatable|kube_node_status_allocatable_cpu_cores|kube_node_status_allocatable_memory_bytes|kube_node_status_capacity|kube_node_status_capacity_cpu_cores|kube_node_status_capacity_memory_bytes|kube_node_status_condition|kube_persistentvolume_capacity_bytes|kube_persistentvolume_status_phase|kube_persistentvolumeclaim_info|kube_persistentvolumeclaim_resource_requests_storage_bytes|kube_pod_container_info|kube_pod_container_resource_limits|kube_pod_container_resource_limits_cpu_cores|kube_pod_container_resource_limits_memory_bytes|kube_pod_container_resource_requests|kube_pod_container_resource_requests_cpu_cores|kube_pod_container_resource_requests_memory_bytes|kube_pod_container_status_restarts_total|kube_pod_container_status_running|kube_pod_container_status_terminated_reason|kube_pod_labels|kube_pod_owner|kube_pod_status_phase|kube_replicaset_owner|kube_statefulset_replicas|kube_statefulset_status_replicas|kubecost_cluster_info|kubecost_cluster_management_cost|kubecost_cluster_memory_working_set_bytes|kubecost_load_balancer_cost|kubecost_network_internet_egress_cost|kubecost_network_region_egress_cost|kubecost_network_zone_egress_cost|kubecost_node_is_spot|kubecost_pod_network_egress_bytes_total|node_cpu_hourly_cost|node_cpu_seconds_total|node_disk_reads_completed|node_disk_reads_completed_total|node_disk_writes_completed|node_disk_writes_completed_total|node_filesystem_device_error|node_gpu_count|node_gpu_hourly_cost|node_memory_Buffers_bytes|node_memory_Cached_bytes|node_memory_MemAvailable_bytes|node_memory_MemFree_bytes|node_memory_MemTotal_bytes|node_network_transmit_bytes_total|node_ram_hourly_cost|node_total_hourly_cost|pod_pvc_allocation|pv_hourly_cost|service_selector_labels|statefulSet_match_labels|kubecost_pv_info|up)
        source_labels:
        - __name__
      relabel_configs:
      - action: keep
        regex: true
        source_labels:
        - __meta_kubernetes_service_annotation_prometheus_io_scrape
      - action: keep
        regex: (.*node-exporter|kubecost-network-costs)
        source_labels:
        - __meta_kubernetes_endpoints_name
      - action: replace
        regex: (https?)
        source_labels:
        - __meta_kubernetes_service_annotation_prometheus_io_scheme
        target_label: __scheme__
      - action: replace
        regex: (.+)
        source_labels:
        - __meta_kubernetes_service_annotation_prometheus_io_path
        target_label: __metrics_path__
      - action: replace
        regex: ([^:]+)(?::\d+)?;(\d+)
        replacement: $1:$2
        source_labels:
        - __address__
        - __meta_kubernetes_service_annotation_prometheus_io_port
        target_label: __address__
      - action: labelmap
        regex: __meta_kubernetes_service_label_(.+)
      - action: replace
        source_labels:
        - __meta_kubernetes_namespace
        target_label: kubernetes_namespace
      - action: replace
        source_labels:
        - __meta_kubernetes_service_name
        target_label: kubernetes_name
      - action: replace
        source_labels:
        - __meta_kubernetes_pod_node_name
        target_label: kubernetes_node
    - job_name: kubecost
      honor_labels: true
      scrape_interval: 1m
      scrape_timeout: 60s
      metrics_path: /metrics
      scheme: http
      dns_sd_configs:
      - names:
        - kubecost-cost-analyzer
        type: 'A'
        port: 9003
    - job_name: kubecost-networking
      kubernetes_sd_configs:
        - role: pod
      relabel_configs:
      # Scrape only the the targets matching the following metadata
        - source_labels: [__meta_kubernetes_pod_label_app_kubernetes_io_instance]
          action: keep
          regex:  kubecost
        - source_labels: [__meta_kubernetes_pod_label_app_kubernetes_io_name]
          action: keep
          regex:  network-costs
    - job_name: kubecost-aggregator
      scrape_interval: 1m
      scrape_timeout: 60s
      metrics_path: /metrics
      scheme: http
      dns_sd_configs:
      - names:
        - kubecost-aggregator
        type: 'A'
        port: 9004
    ## Enables scraping of NVIDIA GPU metrics via dcgm-exporter. Scrapes all
    ## endpoints which contain "dcgm-exporter" in labels "app",
    ## "app.kubernetes.io/component", or "app.kubernetes.io/name" with a case
    ## insensitive match.
    ## Refs:
    ## https://github.com/NVIDIA/gpu-operator/blob/d4316a415bbd684ce8416a88042305fc1a093aa4/assets/state-dcgm-exporter/0600_service.yaml#L7
    ## https://github.com/NVIDIA/dcgm-exporter/blob/54fd1ca137c66511a87a720390613680b9bdabdd/deployment/templates/service.yaml#L23
    - job_name: kubecost-dcgm-exporter
      kubernetes_sd_configs:
        - role: endpoints
      relabel_configs:
        - source_labels: [__meta_kubernetes_pod_label_app, __meta_kubernetes_pod_label_app_kubernetes_io_component, __meta_kubernetes_pod_label_app_kubernetes_io_name]
          action: keep
          regex: (?i)(.*dcgm-exporter.*|.*dcgm-exporter.*|.*dcgm-exporter.*)
    
  recording_rules.yml: |
    {}
  rules: |
    groups:
    - name: CPU
      rules:
      - expr: sum(rate(container_cpu_usage_seconds_total{container!=""}[5m]))
        record: cluster:cpu_usage:rate5m
      - expr: rate(container_cpu_usage_seconds_total{container!=""}[5m])
        record: cluster:cpu_usage_nosum:rate5m
      - expr: avg(irate(container_cpu_usage_seconds_total{container!="POD", container!=""}[5m]))
          by (container,pod,namespace)
        record: kubecost_container_cpu_usage_irate
      - expr: sum(container_memory_working_set_bytes{container!="POD",container!=""})
          by (container,pod,namespace)
        record: kubecost_container_memory_working_set_bytes
      - expr: sum(container_memory_working_set_bytes{container!="POD",container!=""})
        record: kubecost_cluster_memory_working_set_bytes
    - name: Savings
      rules:
      - expr: sum(avg(kube_pod_owner{owner_kind!="DaemonSet"}) by (pod) * sum(container_cpu_allocation)
          by (pod))
        labels:
          daemonset: "false"
        record: kubecost_savings_cpu_allocation
      - expr: sum(avg(kube_pod_owner{owner_kind="DaemonSet"}) by (pod) * sum(container_cpu_allocation)
          by (pod)) / sum(kube_node_info)
        labels:
          daemonset: "true"
        record: kubecost_savings_cpu_allocation
      - expr: sum(avg(kube_pod_owner{owner_kind!="DaemonSet"}) by (pod) * sum(container_memory_allocation_bytes)
          by (pod))
        labels:
          daemonset: "false"
        record: kubecost_savings_memory_allocation_bytes
      - expr: sum(avg(kube_pod_owner{owner_kind="DaemonSet"}) by (pod) * sum(container_memory_allocation_bytes)
          by (pod)) / sum(kube_node_info)
        labels:
          daemonset: "true"
        record: kubecost_savings_memory_allocation_bytes
---
# Source: cost-analyzer/templates/cost-analyzer-pvc-template.yaml
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: kubecost-cost-analyzer
  namespace: kubecost
  labels:
    
    app.kubernetes.io/name: cost-analyzer
    helm.sh/chart: cost-analyzer-2.4.0
    app.kubernetes.io/instance: kubecost
    app.kubernetes.io/managed-by: Helm
    app: cost-analyzer
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 32Gi
---
# Source: cost-analyzer/templates/prometheus-server-pvc.yaml
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  labels:
    component: "server"
    app: prometheus
    release: kubecost
    heritage: Helm
  name: kubecost-prometheus-server
  namespace: kubecost
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: "32Gi"
---
# Source: cost-analyzer/templates/cost-analyzer-cluster-role-template.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: kubecost-cost-analyzer
  labels:
    
    app.kubernetes.io/name: cost-analyzer
    helm.sh/chart: cost-analyzer-2.4.0
    app.kubernetes.io/instance: kubecost
    app.kubernetes.io/managed-by: Helm
    app: cost-analyzer
rules:
  - apiGroups:
      - ''
    resources:
      - configmaps
      - nodes
      - pods
      - events
      - services
      - resourcequotas
      - replicationcontrollers
      - limitranges
      - persistentvolumeclaims
      - persistentvolumes
      - namespaces
      - endpoints
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - apps
    resources:
      - statefulsets
      - deployments
      - daemonsets
      - replicasets
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - batch
    resources:
      - cronjobs
      - jobs
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - autoscaling
    resources:
      - horizontalpodautoscalers
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - policy
    resources:
      - poddisruptionbudgets
    verbs:
      - get
      - list
      - watch
  - apiGroups: 
      - storage.k8s.io
    resources: 
      - storageclasses
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - events.k8s.io
    resources:
      - events
    verbs:
      - get
      - list
      - watch
---
# Source: cost-analyzer/templates/prometheus-server-clusterrole.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    component: "server"
    app: prometheus
    release: kubecost
    heritage: Helm
  name: kubecost-prometheus-server
rules:
  - apiGroups:
      - ""
    resources:
      - nodes
      - nodes/proxy
      - nodes/metrics
      - services
      - endpoints
      - pods
      - ingresses
      - configmaps
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - networking.k8s.io
    resources:
      - ingresses/status
      - ingresses
    verbs:
      - get
      - list
      - watch
  - nonResourceURLs:
      - "/metrics"
    verbs:
      - get
---
# Source: cost-analyzer/templates/cost-analyzer-cluster-role-binding-template.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: kubecost-cost-analyzer
  labels:
    
    app.kubernetes.io/name: cost-analyzer
    helm.sh/chart: cost-analyzer-2.4.0
    app.kubernetes.io/instance: kubecost
    app.kubernetes.io/managed-by: Helm
    app: cost-analyzer
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: kubecost-cost-analyzer
subjects:
  - kind: ServiceAccount
    name: kubecost-cost-analyzer
    namespace: kubecost
---
# Source: cost-analyzer/templates/prometheus-server-clusterrolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:
    component: "server"
    app: prometheus
    release: kubecost
    heritage: Helm
  name: kubecost-prometheus-server
subjects:
  - kind: ServiceAccount
    name: kubecost-prometheus-server
    namespace: kubecost
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: kubecost-prometheus-server
---
# Source: cost-analyzer/templates/cost-analyzer-cluster-role-template.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  namespace: kubecost
  name: kubecost-cost-analyzer
  labels:
    
    app.kubernetes.io/name: cost-analyzer
    helm.sh/chart: cost-analyzer-2.4.0
    app.kubernetes.io/instance: kubecost
    app.kubernetes.io/managed-by: Helm
    app: cost-analyzer
rules:
- apiGroups: 
    - ''
  resources:
    - "pods/log"
  verbs:
    - get
    - list
    - watch
- apiGroups:
    - ''
  resources:
    - configmaps
  verbs:
    - get
    - list
    - watch
    - update
---
# Source: cost-analyzer/templates/cost-analyzer-cluster-role-binding-template.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: kubecost-cost-analyzer
  namespace: kubecost
  labels:
    
    app.kubernetes.io/name: cost-analyzer
    helm.sh/chart: cost-analyzer-2.4.0
    app.kubernetes.io/instance: kubecost
    app.kubernetes.io/managed-by: Helm
    app: cost-analyzer
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: kubecost-cost-analyzer
subjects:
  - kind: ServiceAccount
    name: kubecost-cost-analyzer
    namespace: kubecost
---
# Source: cost-analyzer/templates/aggregator-cloud-cost-service.yaml
kind: Service
apiVersion: v1
metadata:
  name: kubecost-cloud-cost
  namespace: kubecost
  labels:

    helm.sh/chart: cost-analyzer-2.4.0
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: cost-analyzer
    app.kubernetes.io/instance: kubecost
    app: cost-analyzer
spec:
  selector:

    app.kubernetes.io/name: cost-analyzer
    app.kubernetes.io/instance: kubecost
    app: cost-analyzer
  type: "ClusterIP"
  ports:
    - name: tcp-api
      port: 9005
      targetPort: 9005
---
# Source: cost-analyzer/templates/aggregator-service.yaml
kind: Service
apiVersion: v1
metadata:
  name: kubecost-aggregator
  namespace: kubecost
  labels:

    helm.sh/chart: cost-analyzer-2.4.0
    app.kubernetes.io/managed-by: Helm
    app: aggregator
spec:
  selector:

    app.kubernetes.io/name: cost-analyzer
    app.kubernetes.io/instance: kubecost
    app: cost-analyzer
  type: "ClusterIP"
  ports:
    - name: tcp-api
      port: 9004
      targetPort: 9004
---
# Source: cost-analyzer/templates/cost-analyzer-network-costs-service-template.yaml
apiVersion: v1
kind: Service
metadata:
  name: kubecost-network-costs
  namespace: kubecost
  labels:
    app.kubernetes.io/instance: kubecost
    app.kubernetes.io/name: network-costs
    helm.sh/chart: cost-analyzer-2.4.0
    app.kubernetes.io/managed-by: Helm
    app: kubecost-network-costs
spec:
  clusterIP: None
  ports:
  - name: metrics
    port: 3001
    protocol: TCP
    targetPort: 3001
  selector:
    app: kubecost-network-costs
  type: ClusterIP
---
# Source: cost-analyzer/templates/cost-analyzer-service-template.yaml
kind: Service
apiVersion: v1
metadata:
  name: kubecost-cost-analyzer
  namespace: kubecost
  labels:
    app.kubernetes.io/name: cost-analyzer
    helm.sh/chart: cost-analyzer-2.4.0
    app.kubernetes.io/instance: kubecost
    app.kubernetes.io/managed-by: Helm
    app: cost-analyzer
spec:
  selector:
    app.kubernetes.io/name: cost-analyzer
    app.kubernetes.io/instance: kubecost
    app: cost-analyzer
  type: "ClusterIP"
  ports:
    - name: tcp-model
      port: 9003
      targetPort: 9003
    - name: tcp-frontend
      port: 9090
      targetPort: 9090
  sessionAffinity: None
---
# Source: cost-analyzer/templates/forecasting-service.yaml
kind: Service
apiVersion: v1
metadata:
  name: kubecost-forecasting
  namespace: kubecost
  labels:
    helm.sh/chart: cost-analyzer-2.4.0
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: forecasting
    app.kubernetes.io/instance: kubecost
    app: forecasting
spec:
  selector:
    app.kubernetes.io/name: forecasting
    app.kubernetes.io/instance: kubecost
    app: forecasting
  type: ClusterIP
  ports:
    - name: tcp-api
      port: 5000
      targetPort: 5000
---
# Source: cost-analyzer/templates/prometheus-server-service.yaml
apiVersion: v1
kind: Service
metadata:
  labels:
    component: "server"
    app: prometheus
    release: kubecost
    heritage: Helm
  name: kubecost-prometheus-server
  namespace: kubecost
spec:
  ports:
    - name: http
      port: 80
      protocol: TCP
      targetPort: 9090
  selector:
    component: "server"
    app: prometheus
    release: kubecost
  sessionAffinity: None
  type: "ClusterIP"
---
# Source: cost-analyzer/templates/cost-analyzer-network-costs-template.yaml
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: kubecost-network-costs
  namespace: kubecost
  labels:
    app.kubernetes.io/instance: kubecost
    app.kubernetes.io/name: network-costs
    helm.sh/chart: cost-analyzer-2.4.0
    app.kubernetes.io/managed-by: Helm
    app: kubecost-network-costs
spec:
  updateStrategy:
    type: RollingUpdate
  selector:
    matchLabels:
      app: kubecost-network-costs
  template:
    metadata:
      labels:
        app.kubernetes.io/instance: kubecost
        app.kubernetes.io/name: network-costs
        helm.sh/chart: cost-analyzer-2.4.0
        app.kubernetes.io/managed-by: Helm
        app: kubecost-network-costs
    spec:
      hostNetwork: true
      serviceAccountName: kubecost-cost-analyzer
      containers:
      - name: kubecost-network-costs
        image: gcr.io/kubecost1/kubecost-network-costs:v0.17.6
        imagePullPolicy: IfNotPresent
        resources:
          limits:
            cpu: 500m
          requests:
            cpu: 50m
            memory: 20Mi
        env:
        - name: NODE_NAME
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        - name: HOST_PORT
          value: "3001"
        - name: TRAFFIC_LOGGING_ENABLED
          value: "true"
        - name: LOG_LEVEL
          value: info
        volumeMounts:
        - mountPath: /net
          name: nf-conntrack
        - mountPath: /netfilter
          name: netfilter
        - mountPath: /network-costs/config
          name: network-costs-config
        securityContext:
          privileged: true
        ports:
        - name: http-server
          containerPort: 3001
          hostPort: 3001
      volumes:
      - name: network-costs-config
        configMap:
          name: network-costs-config
      - name: nf-conntrack
        hostPath:
          path: /proc/net
      - name: netfilter
        hostPath:
          path: /proc/sys/net/netfilter
---
# Source: cost-analyzer/templates/cost-analyzer-deployment-template.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: kubecost-cost-analyzer
  namespace: kubecost
  labels:
    app.kubernetes.io/name: cost-analyzer
    helm.sh/chart: cost-analyzer-2.4.0
    app.kubernetes.io/instance: kubecost
    app.kubernetes.io/managed-by: Helm
    app: cost-analyzer
spec:
  replicas: 1
  selector:
    matchLabels:
        app.kubernetes.io/name: cost-analyzer
        app.kubernetes.io/instance: kubecost
        app: cost-analyzer
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      labels:
        app.kubernetes.io/name: cost-analyzer
        app.kubernetes.io/instance: kubecost
        app: cost-analyzer
      annotations:
        checksum/configs: b694428a756844bae536701738dd50c8c3ee1882d136419dcd414dce9257255e
    spec:
      securityContext:
        fsGroup: 1001
        fsGroupChangePolicy: OnRootMismatch
        runAsGroup: 1001
        runAsNonRoot: true
        runAsUser: 1001
        seccompProfile:
          type: RuntimeDefault
      restartPolicy: Always
      serviceAccountName: kubecost-cost-analyzer
      volumes:
        - name: tmp
          emptyDir: {}
        - name: nginx-conf
          configMap:
            name: nginx-conf
            items:
              - key: nginx.conf
                path: default.conf
        - name: persistent-configs
          persistentVolumeClaim:
            claimName: kubecost-cost-analyzer
      initContainers:
      containers:
        - image: gcr.io/kubecost1/cost-model:prod-2.4.0
          name: cost-model
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            privileged: false
            readOnlyRootFilesystem: true
          imagePullPolicy: IfNotPresent
          ports:
          - name: tcp-model
            containerPort: 9003
            protocol: TCP
          - name: tcp-frontend
            containerPort: 9090
            protocol: TCP
          resources:
            requests:
              cpu: 200m
              memory: 55Mi
          readinessProbe:
            httpGet:
              path: /healthz
              port: 9003
            initialDelaySeconds: 10
            periodSeconds: 10
            failureThreshold: 200
          livenessProbe:
            httpGet:
              path: /healthz
              port: 9003
            initialDelaySeconds: 10
            periodSeconds: 10
            failureThreshold: 200
          volumeMounts:
            - name: persistent-configs
              mountPath: /var/configs
          env:
            - name: GRAFANA_ENABLED
              value: "false"
            - name: HELM_VALUES
              value: 
            - name: READ_ONLY
              value: "false"
            - name: PROMETHEUS_SERVER_ENDPOINT
              valueFrom:
                configMapKeyRef:
                  name: kubecost-cost-analyzer
                  key: prometheus-server-endpoint
            - name: CLOUD_PROVIDER_API_KEY
              value: "AIzaSyDXQPG_MHUEy9neR7stolq6l0ujXmjJlvk" # The GCP Pricing API key.This GCP api key is expected to be here and is limited to accessing google's billing API.
            - name: CONFIG_PATH
              value: /var/configs/
            - name: DB_PATH
              value: /var/db/
            - name: CLUSTER_PROFILE
              value: production
            - name: EMIT_POD_ANNOTATIONS_METRIC
              value: "false"
            - name: EMIT_NAMESPACE_ANNOTATIONS_METRIC
              value: "false"
            - name: EMIT_KSM_V1_METRICS
              value: "true"
            - name: EMIT_KSM_V1_METRICS_ONLY # ONLY emit KSM v1 metrics that do not exist in KSM 2 by default
              value: "false"
            - name: LOG_COLLECTION_ENABLED
              value: "true"
            - name: PRODUCT_ANALYTICS_ENABLED
              value: "true"
            - name: ERROR_REPORTING_ENABLED
              value: "true"
            - name: VALUES_REPORTING_ENABLED
              value: "true"
            - name: SENTRY_DSN
              value: "https://71964476292e4087af8d5072afe43abd@o394722.ingest.sentry.io/5245431"
            - name: LEGACY_EXTERNAL_API_DISABLED
              value: "false"
            - name: CACHE_WARMING_ENABLED
              value: "false"
            - name: SAVINGS_ENABLED
              value: "true"
            - name: ETL_RESOLUTION_SECONDS
              value: "300"
            - name: ETL_MAX_PROMETHEUS_QUERY_DURATION_MINUTES
              value: "1440"
            - name: ETL_DAILY_STORE_DURATION_DAYS
              value: "91"
            - name: ETL_HOURLY_STORE_DURATION_HOURS
              value: "49"
            - name: ETL_FILE_STORE_ENABLED
              value: "true"
            - name: ETL_ASSET_RECONCILIATION_ENABLED
              value: "true"
            - name: CONTAINER_STATS_ENABLED
              value: "true"
            - name: RECONCILE_NETWORK
              value: "true"
            - name: KUBECOST_METRICS_POD_ENABLED
              value: "false"
            - name: PV_ENABLED
              value: "true"
            - name: MAX_QUERY_CONCURRENCY
              value: "5"
            - name: UTC_OFFSET
              value: "+00:00"
            - name: NETWORK_COSTS_PORT
              value: "3001"
            # ADVANCED_NETWORK_STATS is a feature offered by Kubecost that gives you network
            # insights of your Kubernetes resources with cloud services. The feature is
            # enabled when network cost is enabled and one of the service tagging is enabled
            - name: ADVANCED_NETWORK_STATS
              value: "true"
            - name: CLUSTER_ID
              value: cluster-one
            - name: COST_EVENTS_AUDIT_ENABLED
              value: "false"
            - name: RELEASE_NAME
              value: kubecost
            - name: KUBECOST_NAMESPACE
              value: kubecost
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.name
            - name: KUBECOST_TOKEN
              valueFrom:
                configMapKeyRef:
                  name: kubecost-cost-analyzer
                  key: kubecost-token
            - name: WATERFOWL_ENABLED
              value: "true"
            - name: DIAGNOSTICS_RUN_IN_COST_MODEL
              value: "false"
        - image: gcr.io/kubecost1/frontend:prod-2.4.0
          env:
            - name: GET_HOSTS_FROM
              value: dns
          name: cost-analyzer-frontend
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            privileged: false
            readOnlyRootFilesystem: true
          volumeMounts:
            - name: tmp
              mountPath: /tmp
            - name: tmp
              mountPath: /var/lib/nginx/tmp
            - name: tmp
              mountPath: /var/run
            - name: nginx-conf
              mountPath: /etc/nginx/conf.d/
          resources:
            requests:
              cpu: 10m
              memory: 55Mi
          imagePullPolicy: IfNotPresent
          readinessProbe:
            httpGet:
              path: /healthz
              port: 9003
            initialDelaySeconds: 1
            periodSeconds: 5
            failureThreshold: 6
          livenessProbe:
            httpGet:
              path: /healthz
              port: 9003
            initialDelaySeconds: 1
            periodSeconds: 5
            failureThreshold: 6
        
        
        - name: aggregator
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            privileged: false
            readOnlyRootFilesystem: true
          image: gcr.io/kubecost1/cost-model:prod-2.4.0
          readinessProbe:
            httpGet:
              path: /healthz
              port: 9004
            initialDelaySeconds: 10
            periodSeconds: 10
            failureThreshold: 200
          imagePullPolicy: IfNotPresent
          args: ["waterfowl"]
          ports:
            - name: tcp-api
              containerPort: 9004
              protocol: TCP
          resources:
            {}
          volumeMounts:
            - name: persistent-configs
              mountPath: /var/configs
          env:
            - name: CLUSTER_ID
              value: cluster-one
            - name: NUM_DB_COPY_CHUNKS
              value: "25"
            - name: CONFIG_PATH
              value: /var/configs/
            - name: CLOUD_PROVIDER_API_KEY
              value: "AIzaSyDXQPG_MHUEy9neR7stolq6l0ujXmjJlvk" # The GCP Pricing API key.This GCP api key is expected to be here and is limited to accessing google's billing API.'
            - name: READ_ONLY
              value: "false"
            - name: CUSTOM_COST_ENABLED
              value: "false"
            - name: LOG_LEVEL
              value: info
            - name: DB_READ_THREADS
              value: "1"
            - name: DB_WRITE_THREADS
              value: "1"
            - name: DB_CONCURRENT_INGESTION_COUNT
              value: "1"
            - name: ETL_DAILY_STORE_DURATION_DAYS
              value: "91"
            - name: ETL_HOURLY_STORE_DURATION_HOURS
              value: "49"
            - name: CONTAINER_RESOURCE_USAGE_RETENTION_DAYS
              value: "1"
            - name: DB_TRIM_MEMORY_ON_CLOSE
              value: "true"
            - name: KUBECOST_NAMESPACE
              value: kubecost
            - name: GRAFANA_ENABLED
              value: "false"
        
        - name: cloud-cost
          image: gcr.io/kubecost1/cost-model:prod-2.4.0
          
          readinessProbe:
            httpGet:
              path: /healthz
              port: 9005
            initialDelaySeconds: 10
            periodSeconds: 10
            failureThreshold: 200
          imagePullPolicy: IfNotPresent
          args: ["cloud-cost"]
          ports:
            - name: tcp-api
              containerPort: 9005
              protocol: TCP
          resources:
            {}
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            privileged: false
            readOnlyRootFilesystem: true
          volumeMounts:
            - name: persistent-configs
              mountPath: /var/configs
          env:
            - name: CONFIG_PATH
              value: /var/configs/
            - name: ETL_DAILY_STORE_DURATION_DAYS
              value: "91"
            - name: CLOUD_COST_REFRESH_RATE_HOURS
              value: "6"
            - name: CLOUD_COST_QUERY_WINDOW_DAYS
              value: "7"
            - name: CLOUD_COST_RUN_WINDOW_DAYS
              value: "3"
            - name: CUSTOM_COST_ENABLED
              value: "false"
---
# Source: cost-analyzer/templates/forecasting-deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: kubecost-forecasting
  namespace: kubecost
  labels:
    helm.sh/chart: cost-analyzer-2.4.0
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: forecasting
    app.kubernetes.io/instance: kubecost
    app: forecasting
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: forecasting
      app.kubernetes.io/instance: kubecost
      app: forecasting
  strategy:
    type: RollingUpdate
  template:
    metadata:
      labels:
        app.kubernetes.io/name: forecasting
        app.kubernetes.io/instance: kubecost
        app: forecasting
    spec:
      automountServiceAccountToken: false
      securityContext:
        fsGroup: 1001
        fsGroupChangePolicy: OnRootMismatch
        runAsGroup: 1001
        runAsNonRoot: true
        runAsUser: 1001
        seccompProfile:
          type: RuntimeDefault
      restartPolicy: Always
      containers:
        - name: forecasting
          image: gcr.io/kubecost1/kubecost-modeling:v0.1.16
          volumeMounts:
            - name: tmp
              mountPath: /tmp
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            privileged: false
            readOnlyRootFilesystem: true
          imagePullPolicy: IfNotPresent
          ports:
            - name: tcp-api
              containerPort: 5000
              protocol: TCP
          resources:
            limits:
              cpu: 1500m
              memory: 1Gi
            requests:
              cpu: 200m
              memory: 300Mi
          env:
            - name: CONFIG_PATH
              value: /var/configs/
            - name: KCM_BASE_URL
              value: http://kubecost-aggregator:9004
            - name: MODEL_STORAGE_PATH
              value: "/tmp/localrun/models"
            - name: PAGE_ITEM_LIMIT
              value: "1000"
            - name: "GUNICORN_CMD_ARGS"
              value: "--log-level info -t 1200"
          readinessProbe:
            httpGet:
              path: /healthz
              port: 5000
            initialDelaySeconds: 10
            periodSeconds: 10
            failureThreshold: 200
          livenessProbe:
            httpGet:
              path: /healthz
              port: 5000
            initialDelaySeconds: 10
            periodSeconds: 10
            failureThreshold: 200
      volumes:
      - name: tmp
        emptyDir:
          sizeLimit: 500Mi
---
# Source: cost-analyzer/templates/prometheus-server-deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    component: "server"
    app: prometheus
    release: kubecost
    heritage: Helm
  name: kubecost-prometheus-server
  namespace: kubecost
spec:
  selector:
    matchLabels:
      component: "server"
      app: prometheus
      release: kubecost
  replicas: 1
  strategy:
    rollingUpdate: null
    type: Recreate
  template:
    metadata:
      annotations:
        checksum/configs: b694428a756844bae536701738dd50c8c3ee1882d136419dcd414dce9257255e
      labels:
        component: "server"
        app: prometheus
        release: kubecost
        heritage: Helm
    spec:
      serviceAccountName: kubecost-prometheus-server
      containers:

        - name: prometheus-server
          image: "cgr.dev/chainguard/prometheus:latest"
          imagePullPolicy: "IfNotPresent"
          args:
            - --storage.tsdb.retention.time=97h
            - --config.file=/etc/config/prometheus.yml
            - --storage.tsdb.path=/data
            - --web.console.libraries=/etc/prometheus/console_libraries
            - --web.console.templates=/etc/prometheus/consoles
            - --web.enable-lifecycle
            - --query.max-concurrency=1
            - --query.max-samples=1e+08
          ports:
            - containerPort: 9090
          readinessProbe:
            httpGet:
              path: /-/ready
              port: 9090
            initialDelaySeconds: 5
            timeoutSeconds: 3
            failureThreshold: 3
            successThreshold: 1
          livenessProbe:
            httpGet:
              path: /-/healthy
              port: 9090
            initialDelaySeconds: 5
            timeoutSeconds: 3
            failureThreshold: 3
            successThreshold: 1
          resources:
            {}
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            privileged: false
            readOnlyRootFilesystem: true
          volumeMounts:
            - name: config-volume
              mountPath: /etc/config
            - name: storage-volume
              mountPath: /data
              subPath: ""
      securityContext:
        fsGroup: 1001
        fsGroupChangePolicy: OnRootMismatch
        runAsGroup: 1001
        runAsNonRoot: true
        runAsUser: 1001
        seccompProfile:
          type: RuntimeDefault
      terminationGracePeriodSeconds: 300
      volumes:
        - name: config-volume
          configMap:
            name: kubecost-prometheus-server
        - name: storage-volume
          persistentVolumeClaim:
            claimName: kubecost-prometheus-server
